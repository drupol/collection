parameters:
	ignoreErrors:
		-
			message: "#^Method loophp\\\\collection\\\\Collection\\:\\:all\\(\\) should return array\\<TKey, T\\> but returns array\\.$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Method loophp\\\\collection\\\\Collection\\:\\:empty\\(\\) return type with generic interface loophp\\\\collection\\\\Contract\\\\Collection does not specify its types\\: TKey, T$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Method loophp\\\\collection\\\\Collection\\:\\:fromCallable\\(\\) return type with generic class loophp\\\\collection\\\\Collection does not specify its types\\: TKey, T$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Method loophp\\\\collection\\\\Collection\\:\\:fromFile\\(\\) return type with generic class loophp\\\\collection\\\\Collection does not specify its types\\: TKey, T$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Method loophp\\\\collection\\\\Collection\\:\\:fromIterable\\(\\) return type with generic class loophp\\\\collection\\\\Collection does not specify its types\\: TKey, T$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Method loophp\\\\collection\\\\Collection\\:\\:fromResource\\(\\) return type with generic class loophp\\\\collection\\\\Collection does not specify its types\\: TKey, T$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Method loophp\\\\collection\\\\Collection\\:\\:fromString\\(\\) return type with generic class loophp\\\\collection\\\\Collection does not specify its types\\: TKey, T$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Method loophp\\\\collection\\\\Collection\\:\\:getIterator\\(\\) return type has no value type specified in iterable type Iterator\\.$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Parameter \\#1 \\$resource of class loophp\\\\collection\\\\Iterator\\\\ResourceIterator constructor expects resource, resource\\|false given\\.$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Return type \\(Iterator\\) of method loophp\\\\collection\\\\Collection\\:\\:getIterator\\(\\) should be covariant with return type \\(Iterator\\<mixed, mixed\\>\\) of method loophp\\\\collection\\\\Contract\\\\Collection\\<TKey,T\\>\\:\\:getIterator\\(\\)$#"
			count: 1
			path: src/Collection.php

		-
			message: "#^Generic type loophp\\\\collection\\\\Contract\\\\Operation\\\\Mapable\\<mixed, mixed\\> in PHPDoc tag @extends does not specify all template types of interface loophp\\\\collection\\\\Contract\\\\Operation\\\\Mapable\\: TKey, T, V$#"
			count: 1
			path: src/Contract/Collection.php

		-
			message: "#^Interface loophp\\\\collection\\\\Contract\\\\Collection extends generic interface loophp\\\\collection\\\\Contract\\\\Operation\\\\Partitionable but does not specify its types\\: TKey, T$#"
			count: 1
			path: src/Contract/Collection.php

		-
			message: "#^Type mixed in generic type loophp\\\\collection\\\\Contract\\\\Operation\\\\Mapable\\<mixed, mixed\\> in PHPDoc tag @extends is not subtype of template type TKey of \\(int\\|string\\) of interface loophp\\\\collection\\\\Contract\\\\Operation\\\\Mapable\\.$#"
			count: 1
			path: src/Contract/Collection.php

		-
			message: "#^Anonymous function with return type void returns void but should not return anything\\.$#"
			count: 2
			path: src/Operation/Combinate.php

		-
			message: "#^Method loophp\\\\collection\\\\Operation\\\\Group\\:\\:__invoke\\(\\) should return Closure\\(Iterator\\<TKey, T\\>\\)\\: Generator\\<int, array\\<int, T\\>, mixed, mixed\\> but returns Closure\\(Iterator\\)\\: Generator\\<int, array\\<int, mixed\\>&nonEmpty, mixed, void\\>\\.$#"
			count: 1
			path: src/Operation/Group.php

		-
			message: "#^Strict comparison using \\=\\=\\= between array\\(\\) and array\\<int, T\\>&nonEmpty will always evaluate to false\\.$#"
			count: 1
			path: src/Operation/Permutate.php

		-
			message: "#^Anonymous function should return EmptyIterator but return statement is missing\\.$#"
			count: 1
			path: src/Operation/Times.php

		-
			message: "#^Anonymous function should have native return typehint \"\\?T\"\\.$#"
			count: 1
			path: src/Operation/Unwindow.php

		-
			message: "#^Foreach overwrites \\$value with its value variable\\.$#"
			count: 1
			path: src/Operation/Unwindow.php

